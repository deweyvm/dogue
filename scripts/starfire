#!/bin/bash

### BEGIN INIT INFO
# Provides:          starfire
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Game server for dogue
# Description: Game server for dogue
### END INIT INFO
TIME=`date +%Y-%m-%d_%H-%M-%S`

DAEMON_PATH="/home/doge/dogue_bin/"
DAEMON=/usr/bin/java
DAEMONOPTS="-jar $DAEMON_PATH/starfire.jar --log /var/log/starfire"
DAEMONLOG="/var/log/starfire/daemon-start_$TIME.log"
NAME=starfire
DAEMON_USER=root

PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
if [[ "$2" = "--debug" ]] ; then
    echo "Debugging mode"
    OUTPUT="$DAEMONLOG"
    HASLOG=true
else
    OUTPUT="/dev/null"
    HASLOG=false
fi
case "$1" in
start)
    printf "%-50s\n" "Starting $NAME..."
    cd $DAEMON_PATH

    PID=`$DAEMON $DAEMONOPTS > $OUTPUT 2>&1 & echo $!`
    if [ -z $PID ]; then
        printf "%s\n" "Daemon failed to start"
        if $HASLOG ; then
            cat $OUTPUT
        fi
    else
        echo $PID > $PIDFILE
        printf "%s\n" "Ok"
    fi
;;
status)
    printf "%-50s\n" "Checking $NAME..."
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            printf "%s\n" "Process dead but pidfile ($PIDFILE) exists"
        else
            echo "The service is running"
        fi
    else
        printf "%s\n" "Service not running"
    fi
;;
stop)
    printf "%-50s\n" "Stopping $PID"
    NAME=`cat $PIDFILE`
    PIDFILE $DAEMON_PATH
    if [ -f $PIDFILE ]; then
        kill -HUP $PID
        printf "%s\n" "Ok"
        rm -f $PIDFILE
    else
        printf "%s\n" "pidfile not found"
    fi
;;
force-reload)
    $0 restart
;;
restart)
    $0 stop
    $0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac
